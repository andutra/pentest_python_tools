#!/usr/bin/python3

import sys
import os
import re
import dns.resolver
from datetime import datetime
import pymongo


if len(sys.argv) < 3:
    print('Utilize', sys.argv[0], "<domain> <file to save> [source name]")
    exit()

domain = sys.argv[1]
fDomains = open(sys.argv[2], 'r')
url ='mongodb+srv://andutraMongo17:<password>@anmongo-pagng.mongodb.net/'
'test?retryWrites=true&w=majority'

url = url.replace('<password>', os.getenv('MONGO_PASSWORD'))

database ="DNS_INFO"
client = pymongo.MongoClient(url)
source = sys.argv[3] if sys.argv[3] else fDomains

def main():
    for line in fDomains:
        subDomain = re.findall('\w+\.' + domain, line)
        for s in subDomain:
            print("Inserindo subdominio", s)
            listAlias = extractAlias(s)
            if len(listAlias) > 0:
                retIns = saveDomain(s)
                if (retIns == 0):
                    saveAlias(listAlias)


def saveDomain(subdomain):
    shortSub = subdomain.replace(domain, '')
    saveDict = {
        'Domain': domain,
        'Subdomain': subdomain,
        'ShortSubdomain': shortSub,
        'SourceSite': source,
	'InsertDate' : datetime.now().strftime('%Y-%m-%d %H:%M:%S'), 
    }
    saveToMongo('domains', saveDict)


def saveAlias(aliasList):
    for aliasDict in aliasList:
        saveToMongo('CNAMES', aliasDict)


def extractAlias(subdomain):
    try:
        listRet = list()
        for rdata in dns.resolver.query(subdomain, 'CNAME'):
            aliasDict = {
                'Domain': domain,
                'Subdomain': subdomain,
                'AliasCNAME': str(rdata.target),
            }
            listRet.append(aliasDict)
        return listRet
    except Exception as e:
        print("Erro ao extrair alias")
        print(str(e))
        return []


def keyExists(tabName, dictKey):
    db = client[database]
    qRet = db[tabName].find_one(dictKey)
    if (len(qRet) > 0 ):
        return True
    else:
        return False



def saveToMongo(tabName, dictToSave):
    try:
        db = client[database]
        db[tabName].insert_one(dictToSave)
        print("Inserido:", dictToSave)
        return 0
    except pymongo.errors.DuplicateKeyError:
        print("Os dados ja estao na tabela", dictToSave)
        return 1
    except Exception as e:
        print("Erro ao inserir os dados", tabName)
        print(str(e))
        return -1

if __name__ == '__main__':
    main()
