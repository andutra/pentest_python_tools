# -*- coding: utf-8 -*-
import scrapy
import json
import re
from datetime import datetime

class SpySe(scrapy.Spider):
    name = 'SpySe'
    domain = None
    reStr = '\w+\.'
    subdomains = set()
    baseUrl = 'https://api.spyse.com/v1/subdomains?domain={dominio}&page={pagina}&api_token=' 
    apiToken = 'aU6lf4CLyKZTULlZfXIx24vjR6OXfbeT'


    def start_requests(self):
        if self.domain is None:
            self.logger.error("Use scrapy crawl google -a domain=<domain to search>")
        else:
            self.reStr = self.reStr + self.domain
            url = str(self.baseUrl).replace("{dominio}", self.domain)
            url = url.replace("{pagina}",'1')
            url += self.apiToken
            yield scrapy.Request(
                    url = url,
                callback=self.parse
           )

    def parse(self, response):
        jsonResp = json.loads(response.body_as_unicode())
        #self.subdomains = set(re.findall(self.reStr, response.text))
        if jsonResp['records'] is None or len(jsonResp['records']) == 0:
            return None
        self.subdomains = set([ record['domain'] for record in jsonResp['records'] ])
        for subdomain in self.subdomains:
            shortSub = subdomain.split('.')[0]
            yield {
                    'Domain' : self.domain,
                    'Subdomain' : subdomain,
                    'ShortSubdomain' : shortSub,
                    'SourceSite' : self.name,
                    'InsertDate' : datetime.now().strftime('%Y-%m-%d %H:%M:%S'), 
            }
        # Desenvolver uma forma de pegar a proxima pagina
        next_page = self.getNextPageUrl(response._url) 
        if next_page:
            url = next_page 
            yield scrapy.Request(url=url, callback=self.parse)


    def getNextPageUrl(self, currPageUrl):
        pagNum = currPageUrl.split('&page=')[1].split('&')[0]
        url = str(self.baseUrl).replace("{dominio}", self.domain)
        url = url.replace("{pagina}",str(int(pagNum) + 1))
        url += self.apiToken
        return url
