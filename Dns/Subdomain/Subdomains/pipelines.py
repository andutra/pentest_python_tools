# -*- coding: utf-8 -*-

# Define your item pipelines here
#
# Don't forget to add your pipeline to the ITEM_PIPELINES setting
# See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html
import os
import pymongo
import dns.resolver


class MongoPipeline(object):

    collectionDomains = 'domains'
    collectionCNAME = 'CNAMES'

    def __init__(self, mongo_uri, mongo_db):
        self.mongo_uri = mongo_uri.replace('<password>', os.getenv('MONGO_PASSWORD'))
        self.mongo_db = mongo_db

    @classmethod
    def from_crawler(cls, crawler):
        return cls(
            mongo_uri=crawler.settings.get('MONGO_URI'),
            mongo_db=crawler.settings.get('MONGO_DATABASE', 'items')
        )

    def open_spider(self, spider):
        self.client = pymongo.MongoClient(self.mongo_uri)
        self.db = self.client[self.mongo_db]
        self.db[self.collectionCNAME].create_index([('Subdomain', pymongo.ASCENDING)], 
                                                        unique=True)
        self.db[self.collectionCNAME].create_index([('Subdomain', pymongo.ASCENDING),
            ('AliasCNAME', pymongo.ASCENDING)], unique=True)

    def close_spider(self, spider):
        self.client.close()

    def process_item(self, item, spider):
        spider.log(item)
        self.inset_domain_info(item, spider)
        return item

    def inset_domain_info(self, item, spider):
        try:
            self.insert_cname_info(item, spider)
            self.db[self.collectionDomains].insert_one(dict(item))
        except pymongo.errors.DuplicateKeyError as d:
            pass
        except Exception as e:
            print(str(e))
            pass
        return item

    def insert_cname_info(self, item, spider):
        try:
            for rdate in dns.resolver.query(item['Subdomain'], 'CNAME'):
                dataToInsert = {    
                        'Domain': item['Domain'], 
                        'Subdomain' : item['Subdomain'],
                        'AliasCNAME' : str(rdate.target),
                }
                try:
                    self.db[self.collectionCNAME].insert_one(dict(dataToInsert))
                except pymongo.errors.DuplicateKeyError as d:
                    pass
        except Exception as e:
            print(str(e))
            pass
        return item
