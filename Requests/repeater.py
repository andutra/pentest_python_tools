#!/usr/bin/python3 

import requests
import argparse


parser = argparse.ArgumentParser(description='Le um arquivo com uma requisicao \
        e a partir dele repete requisições em cima de uma wordlist')


def getArgs():
    parser.add_argument('-u', dest='url',
            help='Especificar a url a ser repetirda a requisicao, se nao for \
                    passada nenhuma tentarei utilizar o que estiver em Host: \
                    no header', required=False)

    parser.add_argument('-f', dest='fileName', required=True,
            help='Arquivo com a requisicao a ser repetida')

    parser.add_argument('-w', dest='wordlist',
            help='Caminho para a worlist que sera usada no lugar dos \
                    parametros', required=True)

    return parser.parse_args()


# Get a list of strings with : separator and returns a dict 
def strAsDict(strList):
    dData = dict()
    for line in strList:
        if line:
            dData.update(dict([map(str.strip, line.split(':', 1))]))
    return dData


# Receive a file name and returns a string with his content
def getFileStr(fileName):
    fData = open(fileName, 'r')
    fStr = fData.read()
    fData.close()
    return fStr


# Receive pairs of parameters and replace first for second in a string
# Sample parm1 = parm1 it will replace {parm1} for parm1 in the string
def replaceParms(strData, **kwargs):
    for arg in kwargs:
        strKey = '{' + arg + '}'
        strData = strData.replace(strKey, kwargs[arg])

    return strData


if __name__ == '__main__':
    args = getArgs()
    fs = getFileStr(args.fileName)
    method = 'GET' if 'GET' in fs.split('\n')[0] else 'POST'
    resp = None
    with open(args.wordlist, 'r') as wList:
        for line in wList.read().split('\n'):
            if line:
                headers = strAsDict(replaceParms(fs, parm=line).split('\n')[2:])
                print(headers)
                url = args.url if args.url else 'http://' + headers['Host']
                if method == 'GET':
                    resp = requests.get(url, headers=headers)
                else:
                    resp = requests.post(url, headers=headers)
                print(resp.text)
                exit()
        







    

